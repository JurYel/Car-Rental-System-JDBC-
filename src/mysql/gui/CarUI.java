/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysql.gui;

/**
 *
 * @author Jur Yel
 */
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import mysql.core.Car;
import mysql.core.CarOwner;
import mysql.dao.CarDAO;
import mysql.dao.CarOwnerDAO;
import mysql.dao.BookingsDAO;

public class CarUI extends javax.swing.JFrame {

    /**
     * Creates new form CarUI
     */
    private CarDAO carDAO;
    private CarOwnerDAO ownerDAO;
    private BookingsDAO bookDAO;
    private String accountID;
    public CarUI(String accID) {
        try{
            bookDAO = new BookingsDAO();
            carDAO = new CarDAO();
            ownerDAO = new CarOwnerDAO();
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
        initComponents();
        setLocationRelativeTo(null);
        populateTable();
        populateGUI();
        accountID = accID;
    }
    
    public CarUI(){
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_Owner = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxt_Plate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_Brand = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Type = new javax.swing.JComboBox<>();
        jtxt_CarName = new javax.swing.JTextField();
        jbtn_Register = new javax.swing.JButton();
        jbtn_Expel = new javax.swing.JButton();
        jbtn_Update = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jtxt_Search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_Cars = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Bebas Neue", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("C A R  D E T A I L S");

        jLabel2.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Car Name:");
        jLabel2.setToolTipText("");

        jComboBox_Owner.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jComboBox_Owner.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Car Owner:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Plate Number:");
        jLabel4.setToolTipText("");

        jtxt_Plate.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jtxt_Plate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxt_Plate.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Car Brand:");
        jLabel5.setToolTipText("");

        jComboBox_Brand.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jComboBox_Brand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toyota", "Suzuki", "Nissan", "Mazda", "Mitsubishi", "BMW", "Honda", "Ford" }));
        jComboBox_Brand.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel6.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Car Type:");
        jLabel6.setToolTipText("");

        jComboBox_Type.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jComboBox_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sedan", "Crossover", "SUV", "Hatchback", "Pick-up", "CUV", "Roadster" }));
        jComboBox_Type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jtxt_CarName.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jtxt_CarName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxt_CarName.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox_Owner, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_Brand, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxt_Plate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_Type, javax.swing.GroupLayout.Alignment.LEADING, 0, 171, Short.MAX_VALUE)
                            .addComponent(jtxt_CarName))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxt_CarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_Owner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox_Brand, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxt_Plate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtn_Register.setBackground(new java.awt.Color(153, 153, 153));
        jbtn_Register.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jbtn_Register.setText("Register Car");
        jbtn_Register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_RegisterActionPerformed(evt);
            }
        });

        jbtn_Expel.setBackground(new java.awt.Color(153, 153, 153));
        jbtn_Expel.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jbtn_Expel.setText("Expel Car");
        jbtn_Expel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_Expel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_ExpelActionPerformed(evt);
            }
        });

        jbtn_Update.setBackground(new java.awt.Color(153, 153, 153));
        jbtn_Update.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jbtn_Update.setText("Update Car");
        jbtn_Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtn_Register, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jbtn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtn_Expel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtn_Register, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_Expel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 57, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 330, 490));

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        jtxt_Search.setFont(new java.awt.Font("Josefin Sans", 0, 14)); // NOI18N
        jtxt_Search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxt_Search.setText("Search Car...");
        jtxt_Search.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jtxt_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtxt_SearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jtxt_SearchMouseExited(evt);
            }
        });
        jtxt_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_SearchKeyTyped(evt);
            }
        });

        jtbl_Cars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbl_Cars.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtbl_Cars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_CarsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbl_Cars);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtxt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jtxt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 713, 490));

        jLabel7.setFont(new java.awt.Font("Bebas Neue", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("R E G I S T E R E D  C A R S");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 14, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/icons8_home_page_30px.png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxt_SearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxt_SearchMouseEntered
        if(jtxt_Search.getText().contains("Search Car...")){
            jtxt_Search.setText("");
        }
    }//GEN-LAST:event_jtxt_SearchMouseEntered

    private void jtxt_SearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxt_SearchMouseExited
        if(jtxt_Search.getText().isEmpty()){
            jtxt_Search.setText("Search Car...");
        }
    }//GEN-LAST:event_jtxt_SearchMouseExited

    private void jtxt_SearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_SearchKeyTyped
        String search = jtxt_Search.getText().trim();
        try{
            if(search.isEmpty()){
                ArrayList<Car> list = carDAO.getAllCars();
                CarTableModel model = new CarTableModel(list);
                jtbl_Cars.setModel(model);
            }
            else{
                ArrayList<Car> list = carDAO.searchCar(search);
                CarTableModel model = new CarTableModel(list);
                jtbl_Cars.setModel(model);
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }//GEN-LAST:event_jtxt_SearchKeyTyped

    private void jbtn_RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_RegisterActionPerformed
        try{
            String carName = jtxt_CarName.getText().trim();
            String owner = jComboBox_Owner.getSelectedItem().toString();
            String brand = jComboBox_Brand.getSelectedItem().toString();
            String type = jComboBox_Type.getSelectedItem().toString();
            String plate = jtxt_Plate.getText().trim();
            
            if(carName.isEmpty() || plate.isEmpty()){
                JOptionPane.showMessageDialog(CarUI.this,"Fill up all fields!","Register Error",JOptionPane.ERROR_MESSAGE);
                
            }
            else{
                if(ownerDAO.checkIfOwner(owner)){
                    int ownedCars = ownerDAO.getOwnedCars(owner);
                     String concatCar = String.format("%d %s",ownedCars,(ownedCars > 1)? "cars" : "car");
                    if((JOptionPane.showConfirmDialog(CarUI.this,
                            owner + " already owns " + concatCar + ", continue?",
                            "Confirm Registration",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE)) == JOptionPane.YES_OPTION){
                        Car newCar = new Car(carName,owner,brand,type,plate);
                        int ownerID = ownerDAO.getCarOwnerID(owner);
                        newCar.setOwnerID(ownerID);
                        int numCars = ownedCars + 1;
                        
                        carDAO.RegisterNewCar(newCar);
                        ownerDAO.updateCarsOwned(ownerID, numCars);
                        concatCar = String.format("%d %s",numCars,(numCars > 1)? "cars":"car");
                        JOptionPane.showMessageDialog(CarUI.this,"Car registered successfully!\n" + owner + " now owns " + concatCar + ".","Register Success",JOptionPane.INFORMATION_MESSAGE);
                        populateTable();
                        reset();
                    }
                    
                }
                else{
                    Car newCar = new Car(carName,owner,brand,type,plate);
                    int ownerID = ownerDAO.getCarOwnerID(owner);
                    newCar.setOwnerID(ownerID);
                    carDAO.RegisterNewCar(newCar);
                    
                    JOptionPane.showMessageDialog(CarUI.this,"Car registered successfully!","Register Success",JOptionPane.INFORMATION_MESSAGE);
                        populateTable();
                        reset();
                }
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }//GEN-LAST:event_jbtn_RegisterActionPerformed

    private void jbtn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_UpdateActionPerformed
        int row = jtbl_Cars.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(CarUI.this,"Select a row","Update Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                int carID = Integer.parseInt(jtbl_Cars.getValueAt(row,-2).toString());
                String carName = jtxt_CarName.getText().trim();
                String owner = jComboBox_Owner.getSelectedItem().toString();
                String carOwner = jtbl_Cars.getValueAt(row,1).toString();
                String brand = jComboBox_Brand.getSelectedItem().toString();
                String type = jComboBox_Type.getSelectedItem().toString();
                String plate = jtxt_Plate.getText().trim();
                
                if(bookDAO.checkIfCarBooked(carID)){
                    JOptionPane.showMessageDialog(CarUI.this,"Unable to perform update, \ncar is currently booked.","Update Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(bookDAO.checkIfCarRented(carID)){
                    JOptionPane.showMessageDialog(CarUI.this,"Unable to perform update, \ncar is currently being rented.","Update Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    if(!(owner.equals(carOwner))){
                        if(ownerDAO.checkIfOwner(owner)){
                                int ownedCars = ownerDAO.getOwnedCars(owner);
                                String concatCar = String.format("%d %s",ownedCars,(ownedCars > 1)? "cars" : "car");
                            if ((JOptionPane.showConfirmDialog(CarUI.this,
                                    owner + " already owns " + concatCar + ", continue?",
                                    "Confirm Registration", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE)) == JOptionPane.YES_OPTION) {
                                Car newCar = new Car(carName, owner, brand, type, plate);
                                int ownerID = ownerDAO.getCarOwnerID(owner);
                                newCar.setOwnerID(ownerID);
                                int numCars = ownedCars + 1;

                                carDAO.UpdateCar(newCar);
                                ownerDAO.updateCarsOwned(ownerID, numCars);

                                concatCar = String.format("%d %s",numCars,(numCars > 1)? "cars":"car");
                                JOptionPane.showMessageDialog(CarUI.this, "Car registered successfully!\n" + owner + " now owns " + concatCar + ".", "Register Success", JOptionPane.INFORMATION_MESSAGE);
                                populateTable();
                                reset();
                            }

                        } else {
                            Car newCar = new Car(carName, owner, brand, type, plate);
                            int ownerID = ownerDAO.getCarOwnerID(owner);
                            newCar.setOwnerID(ownerID);
                            carDAO.UpdateCar(newCar);

                            JOptionPane.showMessageDialog(CarUI.this, "Car registered successfully!", "Register Success", JOptionPane.INFORMATION_MESSAGE);
                            populateTable();
                            reset();
                        }
                    }
                    else{
                        Car newCar = new Car(carName, owner, brand, type, plate);
                            int ownerID = ownerDAO.getCarOwnerID(owner);
                            newCar.setOwnerID(ownerID);
                            carDAO.UpdateCar(newCar);

                            JOptionPane.showMessageDialog(CarUI.this, "Car registered successfully!", "Register Success", JOptionPane.INFORMATION_MESSAGE);
                            populateTable();
                            reset();
                    }

                }
                                
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        
        
    }//GEN-LAST:event_jbtn_UpdateActionPerformed

    private void jbtn_ExpelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_ExpelActionPerformed
        int row = jtbl_Cars.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(CarUI.this,"Select a row","Expel Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                String carName = jtxt_CarName.getText().trim();
                String owner = jComboBox_Owner.getSelectedItem().toString();
                int carID = carDAO.getCarID(carName);
                
                if(bookDAO.checkIfCarBooked(carID)){
                    JOptionPane.showMessageDialog(CarUI.this,"Unable to perform expulsion, \ncar is currently booked.","Expel Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(bookDAO.checkIfCarRented(carID)){
                    JOptionPane.showMessageDialog(CarUI.this,"Unable to perform expulsion, \ncar is currently being rented.","Expel Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    if((JOptionPane.showConfirmDialog(CarUI.this,
                            "This car is owned by " + owner + "\n"
                          + "Are you sure to expel this car?","Confirm Expulsion",
                          JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE)) == JOptionPane.YES_OPTION){
                        carDAO.DumpCar(carID);

                        JOptionPane.showMessageDialog(CarUI.this, "Car has been expelled", "Expel Success", JOptionPane.INFORMATION_MESSAGE);
                        populateTable();
                        reset();
                    }
                }
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
    }//GEN-LAST:event_jbtn_ExpelActionPerformed

    private void jtbl_CarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_CarsMouseClicked
        int row = jtbl_Cars.getSelectedRow();
        if((evt.getButton() == MouseEvent.BUTTON1) && (evt.getClickCount() == 1)){
            String carName = jtbl_Cars.getValueAt(row,0).toString();
            String owner = jtbl_Cars.getValueAt(row,1).toString();
            String brand = jtbl_Cars.getValueAt(row,2).toString();
            String type = jtbl_Cars.getValueAt(row,3).toString();
            String plate = jtbl_Cars.getValueAt(row,4).toString();
            
            jtxt_CarName.setText(carName);
            jComboBox_Owner.setSelectedItem(owner);
            jComboBox_Brand.setSelectedItem(brand);
            jComboBox_Type.setSelectedItem(type);
            jtxt_Plate.setText(plate);
        }
        else if((evt.getButton() == MouseEvent.BUTTON1) && (evt.getClickCount() == 2)){
            reset();
        }
    }//GEN-LAST:event_jtbl_CarsMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        HomePageUI homeUI = new HomePageUI(accountID);
        setVisible(false);
        homeUI.setVisible(true);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        HomePageUI homeUI = new HomePageUI(accountID);
        homeUI.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox_Brand;
    private javax.swing.JComboBox<String> jComboBox_Owner;
    private javax.swing.JComboBox<String> jComboBox_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtn_Expel;
    private javax.swing.JButton jbtn_Register;
    private javax.swing.JButton jbtn_Update;
    private javax.swing.JTable jtbl_Cars;
    private javax.swing.JTextField jtxt_CarName;
    private javax.swing.JTextField jtxt_Plate;
    private javax.swing.JTextField jtxt_Search;
    // End of variables declaration//GEN-END:variables

    private void populateGUI(){
        try{
            ArrayList<CarOwner> owners = ownerDAO.getAllCarOwners();
            
            for(int i = 0;i<owners.size();i++){
                String name = String.format("%s %s",owners.get(i).getOwnerFirstName(),owners.get(i).getOwnerLastName());
                jComboBox_Owner.addItem(name);
            }
            
            
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
    
    private void reset(){
        jtxt_CarName.setText("");
        jComboBox_Owner.setSelectedIndex(0);
        jComboBox_Brand.setSelectedIndex(0);
        jComboBox_Type.setSelectedIndex(0);
        jtxt_Plate.setText("");
    }
    
    private void populateTable(){
        try{
            ArrayList<Car> list = carDAO.getAllCars();
            CarTableModel model = new CarTableModel(list);
            jtbl_Cars.setModel(model);
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
}
